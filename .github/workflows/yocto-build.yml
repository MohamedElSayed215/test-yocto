name: Yocto Raspberry Pi 3 Image Build

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch: # Manual trigger

jobs:
  build_raspi3_image:
    runs-on: ubuntu-latest
    timeout-minutes: 480 # 8 hours

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Yocto Build Environment Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y gawk wget git diffstat unzip texinfo gcc-multilib \
                                 build-essential chrpath socat cpio python3 python3-pip \
                                 python3-pexpect xz-utils debianutils iputils-ping \
                                 libssl-dev libsdl1.2-dev xterm python3-git python3-jinja2 \
                                 libegl-dev libwayland-dev libacl1-dev zstd locales
          sudo locale-gen en_US.UTF-8
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Initialize Yocto Project Layers
        working-directory: ${{ github.workspace }}
        run: |
          mkdir -p yocto_layers
          cd yocto_layers
          git clone -b kirkstone git://git.yoctoproject.org/poky.git
          git clone -b kirkstone git://git.yoctoproject.org/meta-raspberrypi.git
          git clone -b kirkstone git://git.openembedded.org/meta-openembedded.git
          git clone -b kirkstone https://git.yoctoproject.org/git/meta-virtualization.git

      - name: Prepare Build Directory and Configurations
        working-directory: ${{ github.workspace }}/yocto_layers/poky
        run: |
          source oe-init-build-env build

          echo "--- Modifying bblayers.conf ---"
          cat <<EOF > conf/bblayers.conf
          POKY_BBLAYERS_CONF_VERSION = "2"

          BBPATH = "\${TOPDIR}"
          BBFILES ?= ""

          BBLAYERS ?= " \\
            \${TOPDIR}/../meta \\
            \${TOPDIR}/../meta-poky \\
            \${TOPDIR}/../meta-yocto-bsp \\
            \${TOPDIR}/../../meta-raspberrypi \\
            \${TOPDIR}/../../meta-openembedded/meta-oe \\
            \${TOPDIR}/../../meta-openembedded/meta-python \\
            \${TOPDIR}/../../meta-openembedded/meta-multimedia \\
            \${TOPDIR}/../../meta-virtualization \\
            \${TOPDIR}/../../../meta-your-project \\
          "
          EOF

          echo "--- Modifying local.conf ---"
          sed -i '/# --- GitHub Actions Customizations START ---/,/# --- GitHub Actions Customizations END ---/d' conf/local.conf

          cat <<EOF >> conf/local.conf
          # --- GitHub Actions Customizations START ---
          MACHINE ?= "raspberrypi3"
          DISTRO ?= "poky"

          DL_DIR ?= "\${TOPDIR}/../../downloads"
          SSTATE_DIR ?= "\${TOPDIR}/../../sstate-cache"

          EXTRA_IMAGE_FEATURES_append = " ssh-server-dropbear dev-pkgs dbg-pkgs"
          INIT_MANAGER = "systemd"

          IMAGE_INSTALL_append = " python3 python3-pip opkg rpi-userland-vc raspi-config libcamera libcamera-tools v4l2-utils \
          gstreamer1.0 gstreamer1.0-plugins-base gstreamer1.0-plugins-good \
          gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \
          docker-ce docker-ce-cli containerd.io python3-docker python3-docker-compose \
          my-app nano wpa-supplicant wireless-tools connman connman-tools"
          # --- GitHub Actions Customizations END ---
          EOF

      - name: Cache Yocto Downloads and Sstate
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/yocto_layers/downloads
            ${{ github.workspace }}/yocto_layers/sstate-cache
          key: ${{ runner.os }}-yocto-kirkstone-${{ hashFiles('${{ github.workspace }}/yocto_layers/poky/build/conf/local.conf', '${{ github.workspace }}/yocto_layers/poky/build/conf/bblayers.conf') }}
          restore-keys: |
            ${{ runner.os }}-yocto-kirkstone-

      - name: Build Yocto Image
        working-directory: ${{ github.workspace }}/yocto_layers/poky/build
        run: |
          export BB_NUMBER_THREADS="$(nproc)"
          export PARALLEL_MAKE="-j $(nproc)"
          bitbake rpi-basic-image

      - name: Upload Built Images
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: raspi3-yocto-images-${{ github.run_number }}
          path: ${{ github.workspace }}/yocto_layers/poky/build/tmp/deploy/images/raspberrypi3/*.wic.gz

      - name: Display Build Output Info (Optional)
        if: always()
        run: |
          echo "--- Listing built image files ---"
          ls -lh ${{ github.workspace }}/yocto_layers/poky/build/tmp/deploy/images/raspberrypi3 || echo "No image directory found."
